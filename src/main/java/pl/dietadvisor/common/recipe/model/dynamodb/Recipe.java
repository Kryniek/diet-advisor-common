package pl.dietadvisor.common.recipe.model.dynamodb;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import pl.dietadvisor.common.recipe.enums.RecipeSource;
import pl.dietadvisor.common.recipe.util.converter.dynamodb.RecipeSourceConverter;
import pl.dietadvisor.common.shared.util.converter.dynamodb.LocalDateTimeConverter;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@DynamoDBTable(tableName = "recipes")
public class Recipe {
    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;
    @DynamoDBTypeConverted(converter = RecipeSourceConverter.class)
    private RecipeSource source;
    private List<Integer> mealNumbers;
    private String name;
    private Integer kcal;
    private BigDecimal proteins;
    private BigDecimal carbohydrates;
    private BigDecimal fats;
    //TODO: adres fotki do s3 lub lokalnie do foleru
    private Map<String, BigDecimal> productsNamesToQuantities;
    private String recipe;
    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    private LocalDateTime createdAt;
    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    private LocalDateTime updatedAt;
}
